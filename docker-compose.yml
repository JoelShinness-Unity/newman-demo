services:
  web:
    build:
      context: .
      dockerfile: .Dockerfile
    environment:
      PORT: 8080
      PG_CONNECTION_STRING: postgres://admin:pass@postgres:5432/demo?ssl_disable=false
      MONGO_CONNECTION_STRING: mongodb://mongo:27017
      MONGO_DB_NAME: demo
    ports:
      - 8080:8080
    networks:
      localhost:
        aliases:
          - web
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
  # postgres:
  #   image: postgres
  #   ports:
  #     - 5432:5432
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U admin -d demo"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   volumes:
  #     - ./pg-setup.sql:/docker-entrypoint-initdb.d/00-setup.sql
  #   environment:
  #     POSTGRES_USER: admin
  #     POSTGRES_PASSWORD: pass
  #     POSTGRES_DB: demo
  #   networks:
  #     localhost:
  #       aliases:
  #         - postgres
  # mongo:
  #   image: mongo
  #   ports:
  #     - 27017:27017
  #   healthcheck:
  #     test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
  #     interval: 10s
  #     timeout: 10s
  #     retries: 5
  #     start_period: 40s
  #   networks:
  #     localhost:
  #       aliases:
  #         - mongo
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: admin
    #   MONGO_INITDB_ROOT_PASSWORD: pass
    #   MONGO_INITDB_DATABASE: demo
  newman:
    image: postman/newman
    volumes:
      - ./newman:/newman
    command:
      ["run", "/newman/newman-test.postman_collection.json", "-e", "/newman/newman-test.postman_environment.json", "-k"]
    networks:
      localhost:
    depends_on:
      web:
        condition: service_started
networks:
  localhost:
